name: release
on:
  push:
    branches:
      - "main"
  release:
    types:
      - published
  workflow_dispatch:
jobs:
  makemigrations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checking out repository
        with:
          ref: release
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.AUTO_MANAGE_REPO_PAT }}
      - uses: actions/setup-python@v5
        name: Setting up Python 3.12
        with:
          python-version: 3.12
      - name: Fetch and rebase branch main onto releases
        run: |
          git config --global user.name 'deligianp'
          git config --global user.email 'deligianp@users.noreply.github.com'
          git fetch origin main
          git merge origin/main --allow-unrelated-histories --no-commit --no-ff
      - name: Infer commit's tag
        run: |
          TAG=$(git describe --tags --exact-match $(git rev-parse origin/main)) && echo "TAG=$TAG" >> $GITHUB_ENV
          :
      - name: Install Django dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Adding merged changes to commit
        run: |
          git add -A
      - name: Making migrations
        run: |
          python manage.py makemigrations --noinput
      - name: Adding potential migration files to commit
        run: |
          git add -f */migrations/*.py
      - name: Commit changes
        run: |
          git commit -m "Releasing changes for commit $(git rev-parse --short "$GITHUB_SHA") from main branch

          - Include changes
          - Include potential new migrations"
      - name: Apply corresponding tag to commit
        if: env.TAG != ''
        run: |
          git tag ${{ env.TAG }}-synced
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.AUTO_MANAGE_REPO_PAT }}
          branch: release
          tags: true